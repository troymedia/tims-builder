<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:formUtils="com.idxd.components.formUtils.*" 
		 xmlns:common="com.idxd.components.common.*"
		 width="100%" height="100%"
		 creationComplete="init()" mouseChildren="false" alpha=".45"
		 >
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	
	<fx:Declarations>
		<s:VerticalLayout id="vertical" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"/>
		<s:Parallel id="moveAndCenter" target="{isoAssessment}" duration="300" effectEnd="isoAssessment.currentState='isoView'" startDelay="100">
			<s:Move xFrom="{selectedAssessmentX}" xTo="0" 
					yFrom="{selectedAssessmentY}" yTo="0"/>
			<s:Resize heightFrom="{isoAssessment.height}" heightTo="{stageHeight}" 
					  widthFrom="{isoAssessment.width}" widthTo="{stageWidth}"
					  />
		</s:Parallel>
		<s:Fade id="activate" alphaTo="1" duration="1000" startDelay="600" target="{this}"/>
		<s:Fade id="fadeOut" alphaTo="0" duration="600" startDelay="150"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			
			import org.aaae.timsBuilder.components.IETAssessment;
			
			import spark.components.BorderContainer;
			
			[Bindable] protected var thisParent:Object;
			[Bindable] protected var stageHeight:int;
			[Bindable] protected var stageWidth:int;
			[Bindable] protected var selectedAssessmentX:Number;
			[Bindable] protected var selectedAssessmentY:Number;
			
			protected var assessment:IETAssessment;
			[Bindable] protected var isoAssessment:IETAssessment;
			[Bindable] protected var assessments:ArrayCollection = new ArrayCollection();
			
			protected function init():void
			{
				buildGrid();
				thisParent = this.parentApplication;
				stageHeight = thisParent.height;
				stageWidth = thisParent.width;
			}
			
			protected function buildGrid():void
			{
				for(var i:int=0; i < 12; i++)
				{
					assessment = new IETAssessment;
					assessment.id = 'assess' + i;
					assessment.setStyle('backgroundColor', 'red');
					assessment.height = 120;
					assessment.width = 160;
					workspace.addElement(assessment);
					assessments.addItem(assessment);
					assessment.addEventListener(MouseEvent.CLICK, function(e:MouseEvent):void 
					{ 
						isoAssessment = IETAssessment.clone(e.currentTarget as IETAssessment);
						isoCanvas.addElement(isoAssessment);
						isoAssessment.addEventListener(MouseEvent.CLICK, resizeThis);
						//isoAssessment.currentState = 'isoView';
						currentState = 'isoView';
						//e.currentTarget.alpha = 0; //create hide() method in Assessment class
						selectedAssessmentX = isoAssessment.x = e.currentTarget.x;
						selectedAssessmentY = isoAssessment.y = e.currentTarget.y; 
						
						moveAndCenter.play();
					});
				}
			}
			
			protected function resetGridElements():void
			{
				moveAndCenter.reverse();
			}
			
			// public functions
			public function activateView():void
			{
				activate.play();
				mouseChildren = true;
			}
			
			public function showAlert():void
			{
				//Alert.show('success!');
			}
			
			protected function resizeThis(e:MouseEvent):void
			{
				moveAndCenter.play();
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="tileView"/>
		<s:State name="listView"/>
		<s:State name="isoView"/>
	</s:states>

	<s:SkinnableContainer id="workspace" height="100%" width="100%" includeIn="tileView" removedEffect="{fadeOut}">
		
		<s:layout>
			<s:TileLayout paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" 
						  orientation="rows" columnAlign="justifyUsingWidth" rowAlign="justifyUsingGap"  
						  horizontalGap="5" verticalGap="5"
						  requestedColumnCount="4" horizontalAlign="center" verticalAlign="middle"/>
		</s:layout>
	</s:SkinnableContainer>
	<s:SkinnableContainer id="isoCanvas">
		
	</s:SkinnableContainer>
	<common:IDXDActionBar height="42" width="100%"  top="0" backgroundColor="0xcecece"/>
	
</s:SkinnableContainer>
