<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   backgroundColor="0x333333"
				   xmlns:components="com.ecistm.tlpa.components.*"
				   xmlns:views="com.ecistm.tlpa.views.*"
				   cornerRadius="10" >
	<fx:Declarations>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.ecistm.tlpa.models.FeedbackImagesModel;
			import com.ecistm.tlpa.models.LessonModel;
			
			import flash.media.*;
			import flash.net.URLRequest;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.RadioButton;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.Button;
			import spark.components.NavigatorContent;
			import spark.components.RadioButton;
			[Bindable] protected var numOfIncorrectAnswers:int = 0;
			[Bindable] public var lessons:ArrayCollection;
			
			[Bindable] protected var questions:ArrayCollection;
			public var rb:spark.components.RadioButton;
			[Bindable] protected var currentQuestionPool:QuestionPool;
			[Bindable] protected var currentQuestion:Question;
			public function buildQuiz(data:*):void
			{
				for each(var qp:Object in data.questionPool)
				{
					var questionPool:QuestionPool = new QuestionPool();
					for each(var q:Object in qp.question)
					{
						var nav:NavigatorContent = new NavigatorContent();
						nav.percentHeight = nav.percentWidth = 100;
						var question:Question = new Question();
						question.type = q.type;
						question.questionText = q.text;
						question.audio = q.audio;
						question.cardinality = q.cardinality;
						question.pool = qp.number;
						question.correctAudio = qp.correctResponse.audio;
						question.correctText = qp.correctResponse.text;
						question.incorrectAudio = qp.incorrectResponse.audio;
						question.incorrectVideo = qp.incorrectResponse.video;
						nav.addElement(question);
						for each(var r:Object in q.response)
						{
							question.rb = new spark.components.RadioButton();
							question.rb.groupName = 'questionPool';
							question.rb.label = r.text;
							question.rb.setStyle('color', 'white');
							question.rb.setStyle('fontSize', 14);
							question.rb.name = (r.correct == 0) ? 'false' : 'true';
							question.addElement(question.rb);
						}
						questionPool.addElement(nav);
						stack.addElement(questionPool);
					}
				}
				currentQuestionPool = QuestionPool(stack.selectedChild);
				currentQuestion = NavigatorContent(currentQuestionPool.selectedChild).getElementAt(0) as Question;
				currentQuestion.soundPlayer.play();
			}
			
			public function stepToNextQuestionPool():void
			{
				stack.selectedIndex += 1;
				currentQuestionPool = QuestionPool(stack.selectedChild);
				currentQuestion = NavigatorContent(currentQuestionPool.selectedChild).getElementAt(0) as Question;
				SoundMixer.stopAll();
				currentQuestion.soundPlayer.play();
			}
			
			public function stepToNextQuestion():void
			{
				
				if(numOfIncorrectAnswers < 2)
				{
					numOfIncorrectAnswers++;
					currentQuestionPool.selectedIndex += 1;
					currentQuestionPool = QuestionPool(stack.selectedChild);
					currentQuestion = NavigatorContent(currentQuestionPool.selectedChild).getElementAt(0) as Question;
					SoundMixer.stopAll();
					currentQuestion.soundPlayer.play();
				}	
				else if(numOfIncorrectAnswers == 3)
				{	
					stepToNextQuestion();
				}
			}
		
			public function resetQuiz():void
			{
				stack.selectedIndex = 0;
				currentQuestionPool = QuestionPool(stack.selectedChild);
				currentQuestion = NavigatorContent(currentQuestionPool.selectedChild).getElementAt(0) as Question;
				currentQuestion.questionPool.selection = null;
				SoundMixer.stopAll();
				currentQuestion.soundPlayer.play();
			}
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10"/>
	</s:layout>
	
	<components:TLPAQuizTitle/>
	
	<s:BorderContainer height="100%" width="100%" backgroundImage="@Embed('assets/images/taxi_dark2.jpg')" borderVisible="true"
					   cornerRadius="10">
		<s:layout>
			<s:VerticalLayout paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10"/>
		</s:layout>
		
		<mx:ViewStack id="stack" width="100%" height="100%">
			
		</mx:ViewStack>
		
	</s:BorderContainer>
	
	<s:HGroup width="100%" horizontalAlign="right">
		<components:SubmitButton/>
	</s:HGroup>
	
</s:BorderContainer>
