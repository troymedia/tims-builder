<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:views="com.ecistm.tlpa.views.*"
		 xmlns:components="com.ecistm.tlpa.components.*" 
		 creationComplete="init()"
		 >
	<!--show="Alert.show('show')" hide="Alert.show('hide')" 
	added="Alert.show('added')" removed="Alert.show('removed')"-->
	<fx:Declarations>
		<components:SoundPlayer id="soundPlayer" url="{audio}"/>
		<s:RadioButtonGroup id="questionPool"/>
		<fx:String id="questionText"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			import spark.components.Label;
			import spark.components.RadioButton;
			
			[Bindable] public var type:String;
			[Bindable] public var text:String;
			[Bindable] public var audio:String = 'assets/audio/spanish_joint.mp3';
			[Bindable] public var cardinality:String;
			[Bindable] public var responses:ArrayCollection;
			public var responsesGroup:VGroup;
			public var rb:RadioButton;
			[Bindable]public var registeredAnswer:String;
			public var label:Label;
			public var selections:ArrayCollection = new ArrayCollection();
			[Bindable] public var pool:String;
			[Bindable] public var correctAudio:String;
			[Bindable] public var correctText:String;
			[Bindable] public var incorrectAudio:String;
			[Bindable] public var incorrectVideo:String;
			[Bindable] public var incorrectImage:String;
			
			protected function init():void
			{
				super.createChildren();
				label = new Label();
				label.setStyle('color', 'white');
				label.setStyle('fontWeight', 'bold');
				label.setStyle('fontSize', 12);
				label.text = questionText;
				this.addElementAt(label, 0);
				//Alert.show(this.audio);
				//Alert.show(this.audio);
//				this.addEventListener(FlexEvent.SHOW, function():void { 
//					soundPlayer.play();
//					this.addEventListener(FlexEvent.HIDE, function():void{
//						soundPlayer.stop();
//					});
//				});
			}
			
			public function registerSelection():void
			{
				if(type == 'MCG')
					registerMultipleAnswers();
				else
					registerSingleAnswer(questionPool.selectedValue as String);
			}
			
			public function registerSingleAnswer(selection:String):void
			{
				registeredAnswer = selection;
			}
			
			public function registerMultipleAnswers():void
			{
				//coming soon...
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="textQuestionView"/>
		<s:State name="imageQuestionView"/>
	</s:states>
	
	<!--<s:HGroup height="320" width="100%" includeIn="imageQuestionView"/>-->
	
</s:VGroup>
